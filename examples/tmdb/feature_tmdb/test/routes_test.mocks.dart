// Mocks generated by Mockito 5.4.4 from annotations
// in feature_tmdb/test/routes_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/widgets.dart' as _i2;
import 'package:go_router/src/state.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUri_0 extends _i1.SmartFake implements Uri {
  _FakeUri_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueKey_1<T> extends _i1.SmartFake implements _i2.ValueKey<T> {
  _FakeValueKey_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GoRouterState].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockGoRouterState extends _i1.Mock implements _i3.GoRouterState {
  MockGoRouterState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Uri get uri => (super.noSuchMethod(
        Invocation.getter(#uri),
        returnValue: _FakeUri_0(
          this,
          Invocation.getter(#uri),
        ),
      ) as Uri);

  @override
  String get matchedLocation => (super.noSuchMethod(
        Invocation.getter(#matchedLocation),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#matchedLocation),
        ),
      ) as String);

  @override
  Map<String, String> get pathParameters => (super.noSuchMethod(
        Invocation.getter(#pathParameters),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i2.ValueKey<String> get pageKey => (super.noSuchMethod(
        Invocation.getter(#pageKey),
        returnValue: _FakeValueKey_1<String>(
          this,
          Invocation.getter(#pageKey),
        ),
      ) as _i2.ValueKey<String>);

  @override
  String namedLocation(
    String? name, {
    Map<String, String>? pathParameters = const {},
    Map<String, String>? queryParameters = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #namedLocation,
          [name],
          {
            #pathParameters: pathParameters,
            #queryParameters: queryParameters,
          },
        ),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.method(
            #namedLocation,
            [name],
            {
              #pathParameters: pathParameters,
              #queryParameters: queryParameters,
            },
          ),
        ),
      ) as String);
}
